乞丐版mybatis
1.启动时扫描base包下的所有mybatis配置文件 ok
2.解析配置文件，将对应的sql单元(statement)注册进configuration ok
3.当客户端调用时，从sqlSessionFactory中获取一个sqlSession,指定对应的sql单元(statement)和对应的参数
4.解析sql单元(statement)，将参数转换成具体的sql语句，调用jdbc接口，和数据库交互
5.根据jdbc响应的结果，将其组装成statement中对应的resultType(先不支持resultMap 0.0)返回给客户端

Configuration
MappedStatement

为什么mybatis需要抽象 Executor？
Executor默认的是simple，还存在batch、reuse等不同处理方式的executor

为什么mybatis需要抽象 ResultSetHandler？
resultType/resultMap等需要不同的处理逻辑来对jdbc的结果集进行对象映射

为什么mybatis需要抽象 StatementHandler？
SimpleStatementHandler 处理简单sql
PreparedStatementHandler 处理预处理sql
CallableStatementHandler 处理存储过程
RoutingStatementHandler 根据MappedStatement类型，使用策略模式进行StatementHandler路由

为什么mybatis需要抽象 SqlSessionFactory？
因为可以以不同的方式 初始化mybatis，配置文件/文件流/环境变量等等

当前目标
resultType对结果集进行映射

1.sqlSessionFactoryBuilder 支持多种方式初始化mybatis配置
2.解析sqlStatement中的子标签语句，实现动态传参 <where>、<set>、<if>等等(加强版 forEach)
3.resultMap解析结果集映射(加强版 嵌套映射 collection、association等)
4.提供事务，批处理执行方式
5.增加拦截器接口，并且自定义一个分页查询的插件

